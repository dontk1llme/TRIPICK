server:
  port: 8080

  servlet:
    encoding:
      charset: UTF-8
      force: true

spring:
  data:
    mongodb:
      host: ${MONGODB_DATABASE_URL}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DATABASE_NAME}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      authentication-database: admin
  config:
    import:
      - env.yml

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${MARIADB_DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 2
      max-lifetime: 30000

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
    defer-datasource-initialization: true

  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            default-image-url: ${KAKAO_DEFAULT_IMAGE}
            scope:
              - profile_nickname
              - account_email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - profile
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://oauth2.googleapis.com/tokeninfo

# s3
cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false

jwt:
  secret: ${JWT_SECRET_KEY}
  authorities:
    key: "auth"
  bearer:
    type: "Bearer"
    prefix: "Bearer "
  filter:
    skip:
      paths: /auth/login/google, /auth/login/kakao, /auth/logout